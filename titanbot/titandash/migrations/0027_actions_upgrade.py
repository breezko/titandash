# Generated by Django 2.2.5 on 2019-10-23 21:51

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('titandash', '0026_configuration_minigames'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='botstatistics',
            name='actions',
        ),
        migrations.RemoveField(
            model_name='configuration',
            name='enable_skills',
        ),
        migrations.RemoveField(
            model_name='configuration',
            name='force_enabled_skills_wait',
        ),
        migrations.RemoveField(
            model_name='configuration',
            name='max_skill_if_possible',
        ),
        migrations.RemoveField(
            model_name='configuration',
            name='order_level_heroes',
        ),
        migrations.RemoveField(
            model_name='configuration',
            name='order_level_master',
        ),
        migrations.RemoveField(
            model_name='configuration',
            name='order_level_skills',
        ),
        migrations.RemoveField(
            model_name='configuration',
            name='run_actions_every_x_seconds',
        ),
        migrations.RemoveField(
            model_name='configuration',
            name='run_actions_on_start',
        ),
        migrations.RemoveField(
            model_name='configuration',
            name='skill_level_intensity',
        ),
        migrations.AddField(
            model_name='botinstance',
            name='next_heroes_level',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Next Heroes Level'),
        ),
        migrations.AddField(
            model_name='botinstance',
            name='next_master_level',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Next Master Level'),
        ),
        migrations.AddField(
            model_name='botinstance',
            name='next_skills_activation',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Next Skills Activation'),
        ),
        migrations.AddField(
            model_name='botinstance',
            name='next_skills_level',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Next Skills Level'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='activate_skills_every_x_seconds',
            field=models.PositiveIntegerField(default=30, help_text='Specify the amount of seconds to wait in between each skills activation process.', verbose_name='Activate Skills Every X Seconds'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='enable_activate_skills',
            field=models.BooleanField(default=True, help_text='Enable the ability to activate skills in game.', verbose_name='Enable Activate Skills'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='enable_clan_crates',
            field=models.BooleanField(default=True, help_text='Enable the ability to collect clan crates in game when they are available.', verbose_name='Enable Clan Crates'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='enable_daily_rewards',
            field=models.BooleanField(default=True, help_text='Enable the ability to collect daily rewards in game when they become available.', verbose_name='Enable Daily Rewards'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='enable_level_skills',
            field=models.BooleanField(default=True, help_text='Enable the ability to level skills in game.', verbose_name='Enable Level Skills'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='hero_level_every_x_seconds',
            field=models.PositiveIntegerField(default=60, help_text='Specify the amount of seconds to wait in between each heroes level process.', verbose_name='Level Heroes Every X Seconds'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='hero_level_on_start',
            field=models.BooleanField(default=True, help_text='Should heroes be levelled once when a session is started.', verbose_name='Level Heroes On Session Start'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='level_deadly_strike_cap',
            field=models.CharField(choices=[('max', 'Max Level'), ('disable', 'Disable'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30')], default='max', help_text='Choose the level cap for the deadly strike skill.', max_length=255, verbose_name='Deadly Strike Level Cap'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='level_fire_sword_cap',
            field=models.CharField(choices=[('max', 'Max Level'), ('disable', 'Disable'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30')], default='max', help_text='Choose the level cap for the fire sword skill.', max_length=255, verbose_name='Fire Sword Level Cap'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='level_hand_of_midas_cap',
            field=models.CharField(choices=[('max', 'Max Level'), ('disable', 'Disable'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30')], default='max', help_text='Choose the level cap for the hand of midas skill.', max_length=255, verbose_name='Hand Of Midas Level Cap'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='level_heavenly_strike_cap',
            field=models.CharField(choices=[('max', 'Max Level'), ('disable', 'Disable'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30')], default='max', help_text='Choose the level cap for the heavenly strike skill.', max_length=255, verbose_name='Heavenly Strike Level Cap'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='level_shadow_clone_cap',
            field=models.CharField(choices=[('max', 'Max Level'), ('disable', 'Disable'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30')], default='max', help_text='Choose the level cap for the shadow clone skill.', max_length=255, verbose_name='Shadow Clone Level Cap'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='level_skills_every_x_seconds',
            field=models.PositiveIntegerField(default=120, help_text='Specify the amount of seconds to wait in between each skills level process.', verbose_name='Level Skills Every X Seconds'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='level_skills_on_start',
            field=models.BooleanField(default=True, help_text='Should skills be levelled once when a session is started.', verbose_name='Level Skills On Session Start'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='level_war_cry_cap',
            field=models.CharField(choices=[('max', 'Max Level'), ('disable', 'Disable'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30')], default='max', help_text='Choose the level cap for the war cry skill.', max_length=255, verbose_name='War Cry Level Cap'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='master_level_every_x_seconds',
            field=models.PositiveIntegerField(default=60, help_text='Specify the amount of seconds to wait in between each sword master level process.', verbose_name='Level Sword Master Every X Seconds'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='master_level_on_start',
            field=models.BooleanField(default=True, help_text='Should the sword master be levelled once when a session is started.', verbose_name='Level Sword Master On Session Start'),
        ),
    ]
